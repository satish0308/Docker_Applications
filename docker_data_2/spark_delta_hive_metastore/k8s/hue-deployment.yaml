apiVersion: apps/v1
kind: Deployment
metadata:
  name: hue
  labels:
    io.kompose.service: hue
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: hue
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: hue
    spec:
      restartPolicy: Always

      initContainers:
        - name: init-hue-config
          image: busybox
          command: ["sh", "-c"]
          args:
            - cp /config/hue.ini /conf/hue.ini
            - cp /config/hue.ini /hue/desktop/conf/hue.ini
          volumeMounts:
            - name: hue-cm1
              mountPath: /config
            - name: hue-conf
              mountPath: /conf

      containers:
        - name: hue
          image: gethue/hue:latest
          ports:
            - containerPort: 8888
              protocol: TCP
          env:
            - name: HUE_CONF_DIR
              value: /hue/desktop/conf
            - name: HUE_DATABASE
              value: postgres
            - name: HUE_DATABASE_DB
              value: hue
            - name: HUE_DATABASE_PASS
              value: huepassword
            - name: HUE_DATABASE_USER
              value: hueuser
            - name: HUE_IGNORE_PASSWORD_SCRIPT_ERRORS
              value: "true"
            - name: HUE_SECRET_KEY
              value: secret
            - name: TMPDIR
              value: /tmp/gunicorn
            - name: HUE_WEB_BASE_PATH
              value: /hue
          securityContext:
            runAsGroup: 1000
            runAsUser: 1001
          volumeMounts:
            - mountPath: /hue/desktop/conf
              name: hue-conf

      volumes:
        - name: hue-cm1
          configMap:
            name: hue-cm1
        - name: hue-conf
          emptyDir: {}
