apiVersion: v1
data:
  hue.ini: "# Hue configuration file\n# ===================================\n#\n# For complete documentation about the contents of this file, check\n#   https://docs.gethue.com/administrator/configuration/\n#\n# All .ini files under the current directory are treated equally. Their\n# contents are merged to form the Hue configuration, which can\n# can be viewed on the Hue at\n#   http://<hue_host>:<port>/dump_config\n\n###########################################################################\n# General configuration for API (authentication, etc)\n###########################################################################\n\n[desktop]\nweb.base_path=/hue\n# Set this to a random string, the longer the better.\n# This is used for secure hashing in the session store.\nsecret_key=\n\n# Execute this script to produce the Django secret key. This will be used when\n# 'secret_key' is not set.\n## secret_key_script=\n\n# Webserver listens on this address and port\nhttp_host=0.0.0.0\nhttp_port=8888\n\n# A comma-separated list of available Hue load balancers\n## hue_load_balancer=\n\n# Time zone name\ntime_zone=America/Los_Angeles\n\n# Enable or disable debug mode.\ndjango_debug_mode=false\n\n# Enable development mode, where notably static files are not cached.\n## dev=false\n\n# Enable or disable database debug mode.\ndatabase_logging=true\n\n# Whether to send debug messages from JavaScript to the server logs.\nsend_dbug_messages=true\n\n# Enable or disable backtrace for server error\nhttp_500_debug_mode=false\n\n# Enable or disable instrumentation. If django_debug_mode is True, this is automatically enabled\n## instrumentation=false\n\n# Server email for internal error messages\n## django_server_email='hue@localhost.localdomain'\n\n# Email backend\n## django_email_backend=django.core.mail.backends.smtp.EmailBackend\n\n# Set to true to use CherryPy as the webserver, set to false\n# to use Gunicorn as the webserver. Defaults to CherryPy if\n# key is not specified.\n## use_cherrypy_server=true\n\n# Gunicorn work class: gevent or evenlet, gthread or sync.\n## gunicorn_work_class=eventlet\n\n# The number of Gunicorn worker processes. If not specified, it uses: (number of CPU * 2) + 1.\n## gunicorn_number_of_workers=1\n\n# Workers silent for more than this many seconds are killed and restarted.\n# gunicorn_worker_timeout=900\n\n# After receiving a restart signal, workers have this much time to finish serving requests.\n# Workers still alive after the timeout (starting from the receipt of the restart signal) are force killed.\n# gunicorn_worker_graceful_timeout=900\n\n# Webserver runs as this user\n## server_user=hue\n## server_group=hue\n\n# This should be the Hue admin and proxy user\n## default_user=hue\n\n# This should be the hadoop cluster admin\n## default_hdfs_superuser=hdfs\n\n# If set to false, runcpserver will not actually start the web server.\n# Used if Apache is being used as a WSGI container.\n## enable_server=yes\n\n# Number of threads used by the CherryPy web server\n## cherrypy_server_threads=50\n\n# This property specifies the maximum size of the receive buffer in bytes in thrift sasl communication,\n# default value is 2097152 (2 MB), which equals to (2 * 1024 * 1024)\n## sasl_max_buffer=2097152\n\n# Hue will try to get the actual host of the Service, even if it resides behind a load balancer.\n# This will enable an automatic configuration of the service without requiring custom configuration of the service load balancer.\n# This is available for the Impala service only currently. It is highly recommended to only point to a series of coordinator-only nodes only.\n# enable_smart_thrift_pool=false\n\n# Limits for request headers\n## limit_request_field_size=8190\n## limit_request_fields=100\n## limit_request_line=4094\n\n# Flag to disable webpage caching. Enabling this flag will reduce the performance of the application but it ensures that\n# the client is always receiving the latest version of the resource.\n## custom_cache_control=true\n\n# Filename of SSL Certificate\n## ssl_certificate=\n\n# Filename of SSL RSA Private Key\n## ssl_private_key=\n\n# Filename of SSL Certificate Chain\n## ssl_certificate_chain=\n\n# SSL certificate password\n## ssl_password=\n\n# Execute this script to produce the SSL password. This will be used when 'ssl_password' is not set.\n## ssl_password_script=\n\n# Disable all renegotiation in TLSv1.2 and earlier. Do not send HelloRequest messages, and ignore renegotiation requests via ClientHello. This option is only available with OpenSSL 1.1.0h and later and python 3.7\n## ssl_no_renegotiation=python.version >= 3.7\n\n# X-Content-Type-Options: nosniff This is a HTTP response header feature that helps prevent attacks based on MIME-type confusion.\n## secure_content_type_nosniff=true\n\n# X-Xss-Protection: \\\"1; mode=block\\\" This is a HTTP response header feature to force XSS protection.\n## secure_browser_xss_filter=true\n\n# X-Content-Type-Options: nosniff This is a HTTP response header feature that helps prevent attacks based on MIME-type confusion.\n## secure_content_security_policy=\"script-src 'self' 'unsafe-inline' 'unsafe-eval' *.googletagmanager.com *.doubleclick.net data:;img-src 'self' *.doubleclick.net http://*.tile.osm.org *.tile.osm.org *.gstatic.com data:;style-src 'self' 'unsafe-inline' fonts.googleapis.com;connect-src 'self' *.google-analytics.com;frame-src *;child-src 'self' data: *.vimeo.com;object-src 'none'\"\n\n# Enable nonce attribute to remove unsafe-inline and auto remove unsafe-inline from csp \n## csp_nonce=true\n\n# Strict-Transport-Security HTTP Strict Transport Security(HSTS) is a policy which is communicated by the server to the user agent via HTTP response header field name \"Strict-Transport-Security\". HSTS policy specifies a period of time during which the user agent(browser) should only access the server in a secure fashion(https).\n## secure_ssl_redirect=False\n## secure_redirect_host=0.0.0.0\n## secure_redirect_exempt=[]\n## secure_hsts_seconds=31536000\n## secure_hsts_include_subdomains=true\n\n# List of allowed and disallowed ciphers in cipher list format.\n# See http://www.openssl.org/docs/apps/ciphers.html for more information on\n# cipher list format. This list is from\n# https://wiki.mozilla.org/Security/Server_Side_TLS v3.7 intermediate\n# recommendation, which should be compatible with Firefox 1, Chrome 1, IE 7,\n# Opera 5 and Safari 1.\n## ssl_cipher_list=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\n\n# Path to default Certificate Authority certificates.\n## ssl_cacerts=/etc/hue/cacerts.pem\n\n# Choose whether Hue should validate certificates received from the server.\n## ssl_validate=true\n\n# Default LDAP/PAM/.. username and password of the hue user used for authentications with other services.\n# Inactive if password is empty.\n# e.g. LDAP pass-through authentication for HiveServer2 or Impala. Apps can override them individually.\n## auth_username=hue\n## auth_password=\n\n# Default encoding for site data\n## default_site_encoding=utf-8\n\n# Help improve Hue with anonymous usage analytics.\n# Use Google Analytics to see how many times an application or specific section of an application is used, nothing more.\n## collect_usage=true\n## gtag_id='G-25K7599S1Q'\n\n# Tile layer server URL for the Leaflet map charts\n# Read more on http://leafletjs.com/reference.html#tilelayer\n# Make sure you add the tile domain to the img-src section of the 'secure_content_security_policy' configuration parameter as well.\n## leaflet_tile_layer=http://{s}.tile.osm.org/{z}/{x}/{y}.png\n\n# The copyright message for the specified Leaflet maps Tile Layer\n## leaflet_tile_layer_attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\n# All the map options accordingly to http://leafletjs.com/reference-0.7.7.html#map-options\n# To change CRS, just use the name, ie. \"EPSG4326\"\n## leaflet_map_options='{}'\n\n# All the tile layer options, accordingly to http://leafletjs.com/reference-0.7.7.html#tilelayer\n## leaflet_tile_layer_options='{}'\n\n# X-Frame-Options HTTP header value. Use 'DENY' to deny framing completely\n## http_x_frame_options=SAMEORIGIN\n\n# Enable X-Forwarded-Host header if the load balancer requires it.\n## use_x_forwarded_host=true\n\n# Enable X-Forwarded-For header if hive/impala requires it.\n## enable_xff_for_hive_impala=true\n\n# Enable X-CSRF-Token header if hive/impala requries it\n## enable_x_csrf_token_for_hive_impala=true\n\n# Support for HTTPS termination at the load-balancer level with SECURE_PROXY_SSL_HEADER.\n## secure_proxy_ssl_header=false\n\n# Comma-separated list of Django middleware classes to use.\n# See https://docs.djangoproject.com/en/1.4/ref/middleware/ for more details on middlewares in Django.\n## middleware=desktop.auth.backend.LdapSynchronizationBackend\n\n# Comma-separated list of regular expressions, which match the redirect URL.\n# For example, to restrict to your local domain and FQDN, the following value can be used:\n# ^\\/.*$,^http:\\/\\/www.mydomain.com\\/.*$\n## redirect_whitelist=^(\\/[a-zA-Z0-9]+.*|\\/)$\n\n# Image version/ Build version of Hue\n# hue_image_version=\"2022.2.2.1\"\n## hue_image_version=\n\n# Name of the Hue host\n# hue_host=\"hue-hive-1\"\n## hue_host=\n\n# Comma separated list of apps to not load at server startup.\n# e.g.: pig,zookeeper\n## app_blacklist=\n\n# Id of the cluster where Hue is located.\n## cluster_id='default'\n\n# Choose whether to show the new SQL editor.\n## use_new_editor=true\n\n# Global setting to allow or disable end user downloads in all Hue.\n# e.g. Query result in Editors and Dashboards, file in File Browser...\n## enable_download=true\n\n# Global setting to enable or disable document sharing.\n# Note that this does not affect currently shared documents.\n## enable_sharing=true\n\n# Global setting to enable or disable new workflow creation in Hue documents.\n## enable_workflow_creation_action=true\n\n# Choose whether to enable SQL syntax check or not\n## enable_sql_syntax_check=true\n\n# Choose whether to use new charting library across the whole Hue.\n## use_new_charts=false\n\n# Choose whether to allow multi tenancy or not.\n## enable_organizations=false\n\n# Choose whether the editor autocomplete should gather suggestions from external source or not. The editor\n# autocomplete uses various sources for its suggestions, listing databases, tables, columns files etc. The results are\n# cached on the client (see cacheable_ttl) so the calls are kept to a minimum but if you prefer to disable these calls\n# all together from the editor set this to true.\n## disable_source_autocomplete=false\n\n# Enable saved default configurations for Hive, Impala, Spark, and Oozie.\n## use_default_configuration=false\n\n# The directory where to store the auditing logs. Auditing is disable if the value is empty.\n# e.g. /var/log/hue/audit.log\n## audit_event_log_dir=\n\n# Size in KB/MB/GB for audit log to rollover.\n## audit_log_max_file_size=100MB\n\n# Timeout in seconds for REST calls.\n## rest_conn_timeout=120\n\n# A json file containing a list of log redaction rules for cleaning sensitive data\n# from log files. It is defined as:\n#\n# {\n#   \"version\": 1,\n#   \"rules\": [\n#     {\n#       \"description\": \"This is the first rule\",\n#       \"trigger\": \"triggerstring 1\",\n#       \"search\": \"regex 1\",\n#       \"replace\": \"replace 1\"\n#     },\n#     {\n#       \"description\": \"This is the second rule\",\n#       \"trigger\": \"triggerstring 2\",\n#       \"search\": \"regex 2\",\n#       \"replace\": \"replace 2\"\n#     }\n#   ]\n# }\n#\n# Redaction works by searching a string for the [TRIGGER] string. If found,\n# the [REGEX] is used to replace sensitive information with the\n# [REDACTION_MASK].  If specified with 'log_redaction_string', the\n# 'log_redaction_string' rules will be executed after the\n# 'log_redaction_file' rules.\n#\n# For example, here is a file that would redact passwords and social security numbers:\n\n# {\n#   \"version\": 1,\n#   \"rules\": [\n#     {\n#       \"description\": \"Redact passwords\",\n#       \"trigger\": \"password\",\n#       \"search\": \"password=\\\".*\\\"\",\n#       \"replace\": \"password=\\\"???\\\"\"\n#     },\n#     {\n#       \"description\": \"Redact social security numbers\",\n#       \"trigger\": \"\",\n#       \"search\": \"\\d{3}-\\d{2}-\\d{4}\",\n#       \"replace\": \"XXX-XX-XXXX\"\n#     }\n#   ]\n# }\n## log_redaction_file=\n\n# Comma separated list of strings representing the host/domain names that the Hue server can serve.\n# e.g.: localhost,domain1,*\n## allowed_hosts=\"*\"\n\n# Number of characters in rest api reponse calls to dump to the logs when debug is enabled. Set to -1 for entire response.\n## rest_response_size=2000\n\n# Turn on Prometheus metrics end point /metrics.\n## enable_prometheus=false\n\n# Turn on the Gist snippet sharing.\n## enable_gist=true\n\n# Add public description so that the link can be unfurled in a preview by websites like Slack.\n# Only enabled automatically in private setups.\n## enable_gist_preview=true\n\n# Turn on the direct link sharing of saved document.\n## enable_link_sharing=true\n\n# Use JWT as Bearer header for authentication when using Thrift over HTTP transport.\n## use_thrift_http_jwt=false\n\n# Hue uses Localstorage to keep the users settings and database preferences.\n# Please make this value true in case local storage should not be used\n# default value is false\n## disable_local_storage = false\n\n# Whether or not to show the Help menu in the Sidebar.\n# Default value is true\n## enable_help_menu=true\n\n# Enable chunked file uploader\n## enable_chunked_file_uploader=false\n\n# Administrators\n# ----------------\n[[django_admins]]\n## [[[admin1]]]\n## name=john\n## email=john@doe.com\n\n# UI customizations\n# -------------------\n[[custom]]\n\n# Top banner HTML code\n# e.g. <H4>Test Lab A2 Hue Services</H4>\n## banner_top_html='<div style=\"padding: 4px; text-align: center; background-color: #003F6C; color: #DBE8F1\">This is Hue 4 Beta! - Please feel free to email any feedback / questions to <a href=\"mailto:team@gethue.com\" target=\"_blank\" style=\"color: #FFF; font-weight: bold\">team@gethue.com</a> or <a href=\"https://twitter.com/gethue\" target=\"_blank\" style=\"color: #FFF; font-weight: bold\">@gethue</a>.</div>'\n\n# Login splash HTML code\n# e.g. WARNING: You are required to have authorization before you proceed\n## login_splash_html=<h4>GetHue.com</h4><br/><br/>WARNING: You have accessed a computer managed by GetHue. You are required to have authorization from GetHue before you proceed.\n\n# Cache timeout in milliseconds for the assist, autocomplete, etc.\n# defaults to 10 days, set to 0 to disable caching\n## cacheable_ttl=864000000\n\n# SVG code to replace the default Hue logo in the top bar and sign in screen\n# e.g. <image xlink:href=\"/static/desktop/art/hue-logo-mini-white.png\" x=\"0\" y=\"0\" height=\"40\" width=\"160\" />\n## logo_svg=\n\n# Configuration options for user authentication into the web application\n# ------------------------------------------------------------------------\n[[auth]]\n\n# Authentication backend. Common settings are:\n# - desktop.auth.backend.AllowFirstUserDjangoBackend\n#     (Default. Fist login becomes and admin, then relies on user accounts)\n# - django.contrib.auth.backends.ModelBackend (entirely Django backend)\n# - desktop.auth.backend.AllowAllBackend (allows everyone)\n# - desktop.auth.backend.LdapBackend\n# - desktop.auth.backend.PamBackend\n# - desktop.auth.backend.SpnegoDjangoBackend\n# - desktop.auth.backend.KnoxSpnegoDjangoBackend\n# - desktop.auth.backend.RemoteUserDjangoBackend\n# - libsaml.backend.SAML2Backend\n# - desktop.auth.backend.OIDCBackend (New oauth, support Twitter, Facebook, Google+ and Linkedin\n# Multiple Authentication backend combinations are supported by specifying a comma-separated list in order of priority.\n## backend=desktop.auth.backend.AllowFirstUserDjangoBackend\n\n# Multiple Authentication backends for REST APIs are supported by specifying a comma-separated list in order of priority.\n## api_auth=rest_framework_simplejwt.authentication.JWTAuthentication,rest_framework.authentication.SessionAuthentication\n\n# Class which defines extra accessor methods for User objects.\n## user_aug=desktop.auth.backend.DefaultUserAugmentor\n\n# The service to use when querying PAM.\n## pam_service=login\n\n# To use Python unix pwd module to get the username from the entered credentials in Hue if Centrify like PAM service is in use.\n# This will set the username to what is being returned by the pwd module.\n## pam_use_pwd_module=false\n\n# When using the desktop.auth.backend.RemoteUserDjangoBackend, this sets\n# the normalized name of the header that contains the remote user.\n# The HTTP header in the request is converted to a key by converting\n# all characters to uppercase, replacing any hyphens with underscores\n# and adding an HTTP_ prefix to the name. So, for example, if the header\n# is called Remote-User that would be configured as HTTP_REMOTE_USER\n#\n# Defaults to HTTP_REMOTE_USER\n## remote_user_header=HTTP_REMOTE_USER\n\n# Ignore the case of usernames when searching for existing users.\n# Supported in remoteUserDjangoBackend and SpnegoDjangoBackend\n## ignore_username_case=true\n\n# Forcibly cast usernames to lowercase, takes precedence over force_username_uppercase\n# Supported in remoteUserDjangoBackend and SpnegoDjangoBackend\n## force_username_lowercase=true\n\n# Forcibly cast usernames to uppercase, cannot be combined with force_username_lowercase\n## force_username_uppercase=false\n\n# Users will expire after they have not logged in for 'n' amount of seconds.\n# A negative number means that users will never expire.\n## expires_after=-1\n\n# Apply 'expires_after' to superusers.\n## expire_superusers=true\n\n# Users will automatically be logged out after 'n' seconds of inactivity.\n# A negative number means that idle sessions will not be timed out.\nidle_session_timeout=-1\n\n# Force users to change password on first login with desktop.auth.backend.AllowFirstUserDjangoBackend\n## change_default_password=false\n\n# Number of login attempts allowed before a record is created for failed logins\n## login_failure_limit=3\n\n# After number of allowed login attempts are exceeded, do we lock out this IP and optionally user agent?\n## login_lock_out_at_failure=false\n\n# If set, defines period of inactivity in hours after which failed logins will be forgotten.\n# A value of 0 or None will disable this check. Default: None\n## login_cooloff_time=None\n\n# If True, lock out based on an IP address AND a user agent.\n# This means requests from different user agents but from the same IP are treated differently.\n## login_lock_out_use_user_agent=false\n\n# If True, lock out based on IP and user\n## login_lock_out_by_combination_user_and_ip=false\n\n# If True, it will look for the IP address from the header defined at reverse_proxy_header.\n## behind_reverse_proxy=false\n\n# If behind_reverse_proxy is True, it will look for the IP address from this header. Default: HTTP_X_FORWARDED_FOR\n## reverse_proxy_header=HTTP_X_FORWARDED_FOR\n\n[[[jwt]]]\n# Endpoint to fetch the public key from verification server.\n# Also adds custom JWT Authentication backend for REST APIs in top priority if set.\n## key_server_url=https://ext_authz:8000\n\n# The JWT payload header containing the username.\n## username_header=sub\n\n# The identifier of the service issued the JWT.\n## issuer=None\n\n# The identifier of the resource intend to access.\n## audience=None\n\n# Verify custom JWT signature.\n## verify=true\n\n# Configuration options for connecting to LDAP and Active Directory\n# -------------------------------------------------------------------\n[[ldap]]\n\n# The search base for finding users and groups\n## base_dn=\"DC=mycompany,DC=com\"\n\n# URL of the LDAP server\n## ldap_url=ldap://auth.mycompany.com\n\n# The NT domain used for LDAP authentication\n## nt_domain=mycompany.com\n\n# A PEM-format file containing certificates for the CA's that\n# Hue will trust for authentication over TLS.\n# The certificate for the CA that signed the\n# LDAP server certificate must be included among these certificates.\n# See more here http://www.openldap.org/doc/admin24/tls.html.\n## ldap_cert=\n## use_start_tls=true\n\n# Distinguished name of the user to bind as -- not necessary if the LDAP server\n# supports anonymous searches\n## bind_dn=\"CN=ServiceAccount,DC=mycompany,DC=com\"\n\n# Password of the bind user -- not necessary if the LDAP server supports\n# anonymous searches\n## bind_password=\n\n# Execute this script to produce the bind user password. This will be used\n# when 'bind_password' is not set.\n## bind_password_script=\n\n# Pattern for searching for usernames -- Use <username> for the parameter\n# For use when using LdapBackend for Hue authentication\n## ldap_username_pattern=\"uid=<username>,ou=People,dc=mycompany,dc=com\"\n\n# Create users in Hue when they try to login with their LDAP credentials\n# For use when using LdapBackend for Hue authentication\n## create_users_on_login = true\n\n# Synchronize a users groups when they login\n## sync_groups_on_login=true\n\n# A comma-separated list of Ldap groups with users that can login\n## login_groups=\n\n# Ignore the case of usernames when searching for existing users in Hue.\n## ignore_username_case=true\n\n# Force usernames to lowercase when creating new users from LDAP.\n# Takes precedence over force_username_uppercase\n## force_username_lowercase=true\n\n# Force usernames to uppercase, cannot be combined with force_username_lowercase\n## force_username_uppercase=false\n\n# Use search bind authentication.\n## search_bind_authentication=true\n\n# Choose which kind of subgrouping to use: nested or suboordinate (deprecated).\n## subgroups=suboordinate\n\n# Define the number of levels to search for nested members.\n## nested_members_search_depth=10\n\n# Whether or not to follow referrals\n## follow_referrals=false\n\n# Enable python-ldap debugging.\n## debug=false\n\n# Sets the debug level within the underlying LDAP C lib.\n## debug_level=255\n\n# Possible values for trace_level are 0 for no logging, 1 for only logging the method calls with arguments,\n# 2 for logging the method calls with arguments and the complete results and 9 for also logging the traceback of method calls.\n## trace_level=0\n\n[[[users]]]\n\n# Base filter for searching for users\n## user_filter=\"objectclass=*\"\n\n# The username attribute in the LDAP schema\n## user_name_attr=sAMAccountName\n\n[[[groups]]]\n\n# Base filter for searching for groups\n## group_filter=\"objectclass=*\"\n\n# The group name attribute in the LDAP schema\n## group_name_attr=cn\n\n# The attribute of the group object which identifies the members of the group\n## group_member_attr=members\n\n[[[ldap_servers]]]\n\n## [[[[mycompany]]]]\n\n# The search base for finding users and groups\n## base_dn=\"DC=mycompany,DC=com\"\n\n# URL of the LDAP server\n## ldap_url=ldap://auth.mycompany.com\n\n# The NT domain used for LDAP authentication\n## nt_domain=mycompany.com\n\n# A PEM-format file containing certificates for the CA's that\n# Hue will trust for authentication over TLS.\n# The certificate for the CA that signed the\n# LDAP server certificate must be included among these certificates.\n# See more here http://www.openldap.org/doc/admin24/tls.html.\n## ldap_cert=\n## use_start_tls=true\n\n# Distinguished name of the user to bind as -- not necessary if the LDAP server\n# supports anonymous searches\n## bind_dn=\"CN=ServiceAccount,DC=mycompany,DC=com\"\n\n# Password of the bind user -- not necessary if the LDAP server supports\n# anonymous searches\n## bind_password=\n\n# Execute this script to produce the bind user password. This will be used\n# when 'bind_password' is not set.\n## bind_password_script=\n\n# Pattern for searching for usernames -- Use <username> for the parameter\n# For use when using LdapBackend for Hue authentication\n## ldap_username_pattern=\"uid=<username>,ou=People,dc=mycompany,dc=com\"\n\n## Use search bind authentication.\n## search_bind_authentication=true\n\n# Whether or not to follow referrals\n## follow_referrals=false\n\n# Enable python-ldap debugging.\n## debug=false\n\n# Sets the debug level within the underlying LDAP C lib.\n## debug_level=255\n\n# Possible values for trace_level are 0 for no logging, 1 for only logging the method calls with arguments,\n# 2 for logging the method calls with arguments and the complete results and 9 for also logging the traceback of method calls.\n## trace_level=0\n\n## [[[[[users]]]]]\n\n# Base filter for searching for users\n## user_filter=\"objectclass=Person\"\n\n# The username attribute in the LDAP schema\n## user_name_attr=sAMAccountName\n\n## [[[[[groups]]]]]\n\n# Base filter for searching for groups\n## group_filter=\"objectclass=groupOfNames\"\n\n# The username attribute in the LDAP schema\n## group_name_attr=cn\n\n# Configuration options for specifying the Source Version Control.\n# ----------------------------------------------------------------\n[[vcs]]\n\n## [[[git-read-only]]]\n## Base URL to Remote Server\n# remote_url=https://github.com/cloudera/hue/tree/master\n\n## Base URL to Version Control API\n# api_url=https://api.github.com\n\n## [[[github]]]\n\n## Base URL to Remote Server\n# remote_url=https://github.com/cloudera/hue/tree/master\n\n## Base URL to Version Control API\n# api_url=https://api.github.com\n\n# These will be necessary when you want to write back to the repository.\n## Client ID for Authorized Application\n# client_id=\n\n## Client Secret for Authorized Application\n# client_secret=\n\n## [[[svn]]\n## Base URL to Remote Server\n# remote_url=https://github.com/cloudera/hue/tree/master\n\n## Base URL to Version Control API\n# api_url=https://api.github.com\n\n# These will be necessary when you want to write back to the repository.\n## Client ID for Authorized Application\n# client_id=\n\n## Client Secret for Authorized Application\n# client_secret=\n\n# Configuration options for specifying the Desktop Database. For more info,\n# see http://docs.djangoproject.com/en/1.11/ref/settings/#database-engine\n# ------------------------------------------------------------------------\n[[database]]\n# Database engine is typically one of:\n# postgresql_psycopg2, mysql, sqlite3 or oracle.\n#\n# Note that for sqlite3, 'name', below is a path to the filename. For other backends, it is the database name\n# Note for Oracle, options={\"threaded\":true} must be set in order to avoid crashes.\n# Note for Oracle, you can use the Oracle Service Name by setting \"host=\" and \"port=\" and then \"name=<host>:<port>/<service_name>\".\n# Note for MariaDB use the 'mysql' engine.\nengine=postgresql_psycopg2\nhost=hive-metastore-postgres\nport=5432\nname=metastore\nuser=hiveuser\npassword=hivepassword\n# conn_max_age option to make database connection persistent value in seconds\n# https://docs.djangoproject.com/en/1.11/ref/databases/#persistent-connections\nconn_max_age=120\n# Execute this script to produce the database password. This will be used when 'password' is not set.\n## password_script=/path/script\n## name=desktop/desktop.db\n## options={}\n# Database schema, to be used only when public schema is revoked in postgres\n## schema=public\n\n# Configuration options for specifying the Desktop session.\n# For more info, see https://docs.djangoproject.com/en/1.4/topics/http/sessions/\n# ------------------------------------------------------------------------\n[[session]]\n# The name of the cookie to use for sessions.\n# This can have any value that is not used by the other cookie names in your application.\n## cookie_name=sessionid\n\n# Configuration to determine whether test cookie should be added determine whether the user's browser supports cookies\n# Should be disabled if django_session table is growing rapidly , Default value is true\n## enable_test_cookie=true\n\n# The cookie containing the users' session ID will expire after this amount of time in seconds.\n# Default is 2 weeks.\n## ttl=1209600\n\n# The cookie containing the users' session ID and csrf cookie will be secure.\n# Should only be enabled with HTTPS.\n## secure=false\n\n# The cookie containing the users' session ID and csrf cookie will use the HTTP only flag.\n## http_only=true\n\n# Use session-length cookies. Logs out the user when she closes the browser window.\n## expire_at_browser_close=false\n\n# If set, limits the number of concurrent user sessions. 1 represents 1 browser session per user. Default: 0 (unlimited sessions per user)\n## concurrent_user_session_limit=0\n\n# A list of hosts which are trusted origins for unsafe requests. See django's CSRF_TRUSTED_ORIGINS for more information\n## trusted_origins=.cloudera.com\n\n# Configuration options for connecting to an external SMTP server\n# ------------------------------------------------------------------------\n[[smtp]]\n\n# The SMTP server information for email notification delivery\nhost=localhost\nport=25\nuser=\npassword=\n\n# Whether to use a TLS (secure) connection when talking to the SMTP server\ntls=no\n\n# Default email address to use for various automated notification from Hue\n## default_from_email=hue@localhost\n\n\n# Configuration options for KNOX integration for secured CDPD cluster\n# ------------------------------------------------------------------------\n[[knox]]\n\n# This is a list of hosts that knox proxy requests can come from\n## knox_proxyhosts=server1.domain.com,server2.domain.com\n# List of Kerberos principal name which is allowed to impersonate others\n## knox_principal=knox1,knox2\n# Comma separated list of strings representing the ports that the Hue server can trust as knox port.\n## knox_ports=80,8443\n\n# Configuration options for Kerberos integration for secured Hadoop clusters\n# ------------------------------------------------------------------------\n[[kerberos]]\n\n# Path to Hue's Kerberos keytab file\n## hue_keytab=\n# Kerberos principal name for Hue\n## hue_principal=hue/hostname.foo.com\n# Frequency in seconds with which Hue will renew its keytab\n## REINIT_FREQUENCY=3600\n# Path to keep Kerberos credentials cached\n## ccache_path=/var/run/hue/hue_krb5_ccache\n# Path to kinit\n## kinit_path=/path/to/kinit\n# Set to false if renew_lifetime in krb5.conf is set to 0m\n## krb5_renewlifetime_enabled=true\n\n# Mutual authentication from the server, attaches HTTP GSSAPI/Kerberos Authentication to the given Request object\n## mutual_authentication=\"OPTIONAL\" or \"REQUIRED\" or \"DISABLED\"\n\n# Configuration options for using OAuthBackend (Core) login\n# ------------------------------------------------------------------------\n[[oauth]]\n# The Consumer key of the application\n## consumer_key=XXXXXXXXXXXXXXXXXXXXX\n\n# The Consumer secret of the application\n## consumer_secret=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n# The Request token URL\n## request_token_url=https://api.twitter.com/oauth/request_token\n\n# The Access token URL\n## access_token_url=https://api.twitter.com/oauth/access_token\n\n# The Authorize URL\n## authenticate_url=https://api.twitter.com/oauth/authorize\n\n# Configuration options for using OIDCBackend (Core) login for SSO\n# ------------------------------------------------------------------------\n[[oidc]]\n# The client ID as relay party set in OpenID provider\n## oidc_rp_client_id=XXXXXXXXXXXXXXXXXXXXX\n\n# The client secret as relay party set in OpenID provider\n## oidc_rp_client_secret=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n# The OpenID provider authoriation endpoint\n## oidc_op_authorization_endpoint=https://keycloak.example.com/auth/realms/Cloudera/protocol/openid-connect/auth\n\n# The OpenID provider token endpoint\n## oidc_op_token_endpoint=https://keycloak.example.com/auth/realms/cloudera/protocol/openid-connect/token\n\n# The OpenID provider user info endpoint\n## oidc_op_user_endpoint=https://keycloak.example.com/auth/realms/cloudera/protocol/openid-connect/userinfo\n\n# The OpenID provider signing key in PEM or DER format\n## oidc_rp_idp_sign_key=/path/to/key_file\n\n# The OpenID provider authoriation endpoint\n## oidc_op_jwks_endpoint=https://keycloak.example.com/auth/realms/Cloudera/protocol/openid-connect/certs\n\n# Whether Hue as OpenID Connect client verify SSL cert\n## oidc_verify_ssl=true\n\n# As relay party Hue URL path to redirect to after login\n## login_redirect_url=https://localhost:8888/oidc/callback/\n\n# The OpenID provider URL path to redirect to after logout\n## logout_redirect_url=https://keycloak.example.com/auth/realms/cloudera/protocol/openid-connect/logout\n\n# As relay party Hue URL path to redirect to after login\n## login_redirect_url_failure=https://localhost:8888/hue/oidc_failed/\n\n# Create a new user from OpenID Connect on login if it doesn't exist\n## create_users_on_login=true\n\n# When creating a new user, which 'claims' attribute from the OIDC provider to be used for creating the username.\n#      Default to 'preferred_username'. Possible values include: 'email'\n## oidc_username_attribute=preferred_username\n\n# The group of users will be created and updated as superuser. To use this feature, setup in Keycloak:\n# 1. add the name of the group here\n# 2. in Keycloak, go to your_realm --> your_clients --> Mappers, add a mapper\n#      Mapper Type: Group Membership (this is predefined mapper type)\n#      Token Claim Name: group_membership (required exact string)\n## superuser_group=hue_superusers\n\n# Configuration options for Metrics\n# ------------------------------------------------------------------------\n[[metrics]]\n\n# Enable the metrics URL \"/desktop/metrics\"\n## enable_web_metrics=True\n\n# If specified, Hue will write metrics to this file.\n## location=/var/log/hue/metrics.json\n\n# Time in milliseconds on how frequently to collect metrics\n## collection_interval=30000\n\n\n# Configuration options for Slack\n# ------------------------------------------------------------------------\n[[slack]]\n# Slack credentials\n## slack_client_id=\n## slack_client_secret=\n## slack_verification_token=\n## slack_bot_user_token=\n\n# Enables Slack application API endpoints\n## is_enabled=true\n\n# Enables direct sharing from Editor to Slack\n## share_from_editor=true\n\n\n# Configuration options for the request Tracing\n# ------------------------------------------------------------------------\n[[tracing]]\n## If tracing is enabled.\n# enabled=false\n\n## Trace all the requests instead of a few specific ones like the SQL Editor. Much noisiers.\n# trace_all=false\n\n\n# Configuration options for the Task Server\n# ------------------------------------------------------------------------\n[[task_server]]\n\n# If resource intensive or blocking can be delegated to an already running task server.\n## enabled=False\n\n# Switch on the integration with the Task Scheduler.\n## beat_enabled=False\n\n# Number of query results rows to fetch into the result storage.\n## fetch_result_limit=2000\n\n# Django file storage class to use to temporarily store query results\n## result_storage='{\"backend\": \"django.core.files.storage.FileSystemStorage\", \"properties\": {\"location\": \"./logs\"}}'\n\n# How the task server and tasks communicate.\n## broker_url=amqp://guest:guest@localhost//\n\n# Where to store task results. Defaults to local file system path. Celery comes with a several other backends.\n## celery_result_backend=file:///$HUE_ROOT/logs\n\n# Default options provided to the task server at startup.\n## celeryd_opts='--time-limit=300'\n\n# Django cache to use to store temporarily used data during query execution. This is in addition to result_file_storage and result_backend.\n## execution_storage='{\"BACKEND\": \"django.core.cache.backends.locmem.LocMemCache\", \"LOCATION\": \"celery-hue\"}'\n\n# Path to a file containing a list of beat schedules.\n# beat_schedules_file=/etc/hue/conf/schedules.py\n# e.g.\n# periodic_tasks = [{\n#   'add-every-monday-morning': {\n#       'task': 'desktop.celery.debug_task',\n#       'schedule': crontab(minute='*'),\n#     },\n#   },\n#   {\n#     'customer_count_query': {\n#       'task': 'notebook.tasks.run_sync_query',\n#       'schedule': crontab(minute='*'),\n#       'args': (None, None),\n#     },\n#   }\n# ]\n\n# Configuration options for the Task Server V2\n# ------------------------------------------------------------------------\n[[task_server_v2]]\n\n# If resource intensive or blocking can be delegated to an already running task server.\n## enabled=False\n\n# Switch on the integration with the Task Scheduler.\n## beat_enabled=False\n\n# Number of query results rows to fetch into the result storage.\n## fetch_result_limit=2000\n\n# Django file storage class to use to temporarily store query results\n## result_storage='{\"backend\": \"django.core.files.storage.FileSystemStorage\", \"properties\": {\"location\": \"./logs\"}}'\n\n# How the task server and tasks communicate.\n## broker_url=amqp://guest:guest@localhost//\n\n# Where to store task results. Defaults to local file system path. Celery comes with a several other backends.\n## celery_result_backend=file:///$HUE_ROOT/logs\n\n# Default options provided to the task server at startup.\n## celeryd_opts='--time-limit=300'\n\n# Django cache to use to store temporarily used data during query execution. This is in addition to result_file_storage and result_backend.\n## execution_storage='{\"BACKEND\": \"django.core.cache.backends.locmem.LocMemCache\", \"LOCATION\": \"celery-hue\"}'\n\n# Set the log level for celery\n## celery_log_level='INFO'\n\n# Switch on this peroidic cleaner which checks disk usage and makes space for file uploads\n## check_disk_usage_and_clean_task_enabled=False\n\n# Time interval in seconds to run this peroidic cleaner which checks disk usage and makes space for file uploads\n## check_disk_usage_and_clean_task_periodic_interval=1000\n\n# Clean up files in /tmp folder if the disk usage is beyond the threshold\n## disk_usage_cleanup_threshold=90\n\n# Clean up files older than timedelta. Unit of timedelta is minutes\n## disk_usage_and_clean_task_time_delta=60\n\n# Switch on this peroidic cleaner which cleans up failed upload tasks stored in redis\n## cleanup_stale_uploads_in_redis_enabled=False\n\n# Time interval in seconds to run this peroidic cleaner which cleans up failed upload tasks stored in redis\n## cleanup_stale_uploads_task_periodic_interval=900\n\n# Redis keys of format 'Upload__*' older than timedelta will be cleaned up. Unit of timedelta is minutes\n## cleanup_stale_uploads_task_time_delta=60\n\n# Settings for the Google Cloud lib\n# ------------------------------------------------------------------------\n\n[[gc_accounts]]\n[[[default]]]\n# The JSON credentials to authenticate to Google Cloud e.g. '{ \"type\": \"service_account\", \"project_id\": .... }'\n## json_credentials=None\n\n# Optionally set this for a different home directory path. e.g. gs://gethue-bucket/user\n## default_home_path=gs://<bucket_name>/<relative_path>\n\n## Configuration for Ozone File System\n# ------------------------------------------------------------------------\n[[ozone]]\n# Default Ozone cluster\n[[[default]]]\n# Enter the filesystem URI\n## fs_defaultfs=ofs://localhost:8020\n\n# NameNode logical name.\n## logical_name=\n\n# Use HttpFS as the communication mechanism.\n# Domain should be the HttpFS host and port.\n# Default port is 9778 for HttpFS.\n## webhdfs_url=http://localhost:9778/webhdfs/v1\n\n# Whether Ozone requires client to perform Kerberos authentication.\n## security_enabled=false\n\n# Choose whether Hue should validate certificates received from the server.\n## ssl_cert_ca_verify=true\n\n# Directory of the Ozone configuration\n## ozone_conf_dir=$OZONE_CONF_DIR when set or '/etc/ozone/conf'\n\n## Configuration for RAZ service integration\n# ------------------------------------------------------------------------\n[[raz]]\n## Turns on the integration as ready to use\n# is_enabled=false\n\n## Endpoint to contact\n# api_url=https://localhost:8080\n\n## How to authenticate against: KERBEROS or JWT\n# api_authentication=KERBEROS\n\n## Autocreate the user home directory in the remote home storage path.\n# autocreate_user_dir=true\n\n## Enable integration with Google Storage for RAZ\n# is_raz_gs_enabled=false\n\n###########################################################################\n# Settings to configure the snippets available in the Notebook\n###########################################################################\n\n[notebook]\n\n## Show the notebook menu or not\n# show_notebooks=false\n\n## Flag to enable the selection of queries from files, saved queries into the editor or as snippet.\n# enable_external_statements=false\n\n## Flag to enable the bulk submission of queries as a background task through Oozie.\n# enable_batch_execute=true\n\n## Flag to enable all interpreters (Hive and Impala are added by default) related to every whitelisted app.\n# enable_all_interpreters=false\n\n## Flag to turn on the SQL indexer.\n# enable_sql_indexer=false\n\n## Flag to turn on the Presentation mode of the editor.\n# enable_presentation=true\n\n## Flag to enable the SQL query builder of the table assist (deprecated).\n# enable_query_builder=false\n\n## Flag to enable the creation of a coordinator for the current SQL query.\n# enable_query_scheduling=false\n\n## Main flag to override the automatic starting of the DBProxy server.\n# enable_dbproxy_server=true\n\n## Classpath to be appended to the default DBProxy server classpath.\n# dbproxy_extra_classpath=\n\n## Comma separated list of interpreters that should be shown on the wheel. This list takes precedence over the\n## order in which the interpreter entries appear. Only the first 5 interpreters will appear on the wheel.\n# interpreters_shown_on_wheel=\n\n## Default limit to use in SELECT statements if not present. Set to 0 to disable.\n# default_limit=5000\n\n## Set the default interpreter for all users. \n## Starred interpreters at user level will get more priority than the value below.\n# default_interpreter=\n\n# One entry for each type of snippet.\n[[interpreters]]\n# Define the name and how to connect and execute the language.\n# https://docs.gethue.com/administrator/configuration/editor/\n\n# [[[mysql]]]\n#   name = MySQL\n#   interface=sqlalchemy\n#   ## https://docs.sqlalchemy.org/en/latest/dialects/mysql.html\n#   options='{\"url\": \"mysql://root:secret@database:3306/hue\"}'\n#   ## options='{\"url\": \"mysql://${USER}:${PASSWORD}@localhost:3306/hue\"}'\n\n[[[hive]]]\n  name=Hive\n  interface=hiveserver2\n  options='{\"host\": \"hive-server\", \"port\": 10000, \"auth\": \"NOSASL\"}'\n\n\n# [[[hplsql]]]\n#   name=Hplsql\n#   interface=hiveserver2\n\n# [[[llap]]]\n#   name=LLAP\n#   interface=hiveserver2\n\n# [[[impala]]]\n#   name=Impala\n#   interface=hiveserver2\n\n[[[postgresql]]]\n   \tname=PostgreSQL\n\tinterface=sqlalchemy\n\toptions='{\"url\": \"postgresql://hueuser:huepassword@postgres:5432/huedb\"}'\n\n# [[[druid]]]\n#   name = Druid\n#   interface=sqlalchemy\n#   options='{\"url\": \"druid://host:8082/druid/v2/sql/\"}'\n\n# [[[sparksql]]]\n#   name = Spark Sql\n#   interface=sqlalchemy\n#   options='{\"url\": \"hive://user:password@localhost:10000/database\"}'\n\n# [[[sparksql]]]\n#   name=SparkSql\n#   interface=livy\n\n# [[[spark]]]\n#   name=Scala\n#   interface=livy\n\n# [[[pyspark]]]\n#   name=PySpark\n#   interface=livy\n\n# [[[r]]]\n#   name=R\n#   interface=livy\n\n# [[jar]]]\n#   name=Spark Submit Jar\n#   interface=livy-batch\n\n# [[[py]]]\n#   name=Spark Submit Python\n#   interface=livy-batch\n\n# [[[text]]]\n#   name=Text\n#   interface=text\n\n# [[[markdown]]]\n#   name=Markdown\n#   interface=text\n\n# [[[sqlite]]]\n#   name = SQLite\n#   interface=rdbms\n\n# [[[oracle]]]\n#   name = Oracle\n#   interface=rdbms\n\n# [[[solr]]]\n#   name = Solr SQL\n#   interface=solr\n#   ## Name of the collection handler\n#   options='{\"collection\": \"default\"}'\n\n# [[[pig]]]\n#   name=Pig\n#   interface=oozie\n\n# [[[java]]]\n#   name=Java\n#   interface=oozie\n\n# [[[spark2]]]\n#   name=Spark\n#   interface=oozie\n\n# [[[mapreduce]]]\n#   name=MapReduce\n#   interface=oozie\n\n# [[[sqoop1]]]\n#   name=Sqoop1\n#   interface=oozie\n\n# [[[distcp]]]\n#   name=Distcp\n#   interface=oozie\n\n# [[[shell]]]\n#   name=Shell\n#   interface=oozie\n\n# [[[trino]]]\n#   name=Trino\n#   interface=trino\n#   ## username and password for LDAP enabled over HTTPS.\n#   options='{\"url\": \"http://localhost:8080\", \"auth_username\": \"\", \"auth_password\": \"\"}'\n\n\n# [[[presto]]]\n# name=Presto SQL\n# interface=presto\n# ## Specific options for connecting to the Presto server.\n# ## The JDBC driver presto-jdbc.jar need to be in the CLASSPATH environment variable.\n# ## If 'user' and 'password' are omitted, they will be prompted in the UI.\n# options='{\"url\": \"jdbc:presto://localhost:8080/catalog/schema\", \"driver\": \"io.prestosql.jdbc.PrestoDriver\", \"user\": \"root\", \"password\": \"root\"}'\n# ## Impersonation on.\n# # options='{\"url\": \"presto://localhost:8080/hive/default\", \"has_impersonation\": true}'\n# ## Kerberos.\n# # options='{\"url\": \"presto://localhost:8080/hive/default?KerberosKeytabPath=/path/to/keytab&KerberosPrincipal=principal&KerberosRemoteServiceName=service&protocol=https\"'\n# ## LDAPS enabled over HTTPS.\n# # options='{\"url\": \"presto://username:password@localhost:8443/tpch/default\",\"connect_args\":\"{\\\"protocol\\\": \\\"https\\\"}\"}'\n# ## Presto Session properties along with HTTPS.\n# # options='{\"url\": \"presto://username:password@localhost:8443/tpch/default\",\"connect_args\":\"{\\\"protocol\\\": \\\"https\\\", \\\"session_props\\\": {\\\"query_max_run_time\\\": \\\"1m\\\"}}\"}'\n# ## Presto Session properties when HTTPS is not enabled.\n# # options='{\"url\": \"presto://username:password@localhost:8080/tpch/default\",\"connect_args\":\"{\\\"session_props\\\": {\\\"query_max_run_time\\\": \\\"1m\\\"}}\"}'\n\n# [[[dasksql]]]\n# name=Dask-SQL\n# interface=sqlalchemy\n# ## Specific options for connecting to the dask-sql server.\n# ## Please note, that dask-sql uses the presto protocol.\n# # options='{\"url\": \"presto://localhost:8080/catalog/default\"}'\n\n# [[[clickhouse]]]\n# name=ClickHouse\n# interface=sqlalchemy\n# e.g. clickhouse://user:password@example.com:8124/test?protocol=https\n# options='{\"url\": \"clickhouse://localhost:8123\"}'\n\n# [[[vertica]]]\n# name=Vertica\n# interface=jdbc\n# ## Specific options for connecting to a Vertica server.\n# ## The JDBC driver vertica-jdbc-*.jar and its related jars need to be in the CLASSPATH environment variable.\n# ## If 'user' and 'password' are omitted, they will be prompted in the UI.\n# options='{\"url\": \"jdbc:vertica://localhost:5434\", \"driver\": \"com.vertica.jdbc.Driver\"}'\n\n## Define which query and table examples can be automatically setup for the available dialects.\n# [[examples]]\n## If installing the examples automatically at startup.\n# auto_load=false\n## If automatically loading the dialect example at Editor opening.\n# auto_open=false\n## Names of the saved queries to install. All if empty.\n# queries=\n## Names of the tables to install. All if empty.\n# tables=\n\n\n###########################################################################\n# Settings to configure your Analytics Dashboards\n###########################################################################\n\n[dashboard]\n\n# Activate the Dashboard link in the menu.\n## is_enabled=true\n\n# Activate the SQL Dashboard (beta).\n## has_sql_enabled=false\n\n# Activate the Query Builder (beta).\n## has_query_builder_enabled=false\n\n# Activate the static report layout (beta).\n## has_report_enabled=false\n\n# Activate the new grid layout system.\n## use_gridster=true\n\n# Activate the widget filter and comparison (beta).\n## has_widget_filter=false\n\n# Activate the tree widget (to drill down fields as dimensions, alpha).\n## has_tree_widget=false\n\n# Setting this value to true opens up for possible xss attacks.\n## allow_unsecure_html=false\n\n[[engines]]\n\n#  [[[solr]]]\n#  Requires Solr 6+\n##  analytics=true\n##  nesting=false\n\n#  [[[sql]]]\n##  analytics=true\n##  nesting=false\n\n\n###########################################################################\n# Settings to configure your Hadoop cluster.\n###########################################################################\n\n[hadoop]\n\n# Configuration for HDFS NameNode\n# ------------------------------------------------------------------------\n[[hdfs_clusters]]\n  # HA support by using HttpFs\n\n[[[default]]]\n# Enter the filesystem uri\nfs_defaultfs=hdfs://namenode:9000\n\n\n\n# NameNode logical name.\n## logical_name=\n\n# Use WebHdfs/HttpFs as the communication mechanism.\n# Domain should be the NameNode or HttpFs host.\n# Default port is 14000 for HttpFs.\nwebhdfs_url=http://namenode:9870/webhdfs/v1\n\n# Change this if your HDFS cluster is Kerberos-secured\n## security_enabled=false\n\n# In secure mode (HTTPS), if SSL certificates from YARN Rest APIs\n# have to be verified against certificate authority\n## ssl_cert_ca_verify=True\n\n# Directory of the Hadoop configuration\n## hadoop_conf_dir=$HADOOP_CONF_DIR when set or '/etc/hadoop/conf'\n\n# Whether Hue should list this HDFS cluster. For historical reason there is no way to disable HDFS.\n## is_enabled=true\n\n# Size, in bytes, of the chunks Django should store into memory and feed into the handler. Default is 64MB.\n## upload_chunk_size=64*1024*1024\n\n# Configuration for YARN (MR2)\n# ------------------------------------------------------------------------\n[[yarn_clusters]]\n\n[[[default]]]\n# Enter the host on which you are running the ResourceManager\n## resourcemanager_host=localhost\n\n# The port where the ResourceManager IPC listens on\n## resourcemanager_port=8032\n\n# Whether to submit jobs to this cluster\nsubmit_to=True\n\n# Resource Manager logical name (required for HA)\n## logical_name=\n\n# Change this if your YARN cluster is Kerberos-secured\n## security_enabled=false\n\n# URL of the ResourceManager API\n## resourcemanager_api_url=http://localhost:8088\n\n# URL of the ProxyServer API\n## proxy_api_url=http://localhost:8088\n\n# URL of the HistoryServer API\n## history_server_api_url=http://localhost:19888\n\n# URL of the Spark History Server\n## spark_history_server_url=http://localhost:18088\n\n# Change this if your Spark History Server is Kerberos-secured\n## spark_history_server_security_enabled=false\n\n# In secure mode (HTTPS), if SSL certificates from YARN Rest APIs\n# have to be verified against certificate authority\n## ssl_cert_ca_verify=True\n\n  # HA support by specifying multiple clusters.\n  # Redefine different properties there.\n  # e.g.\n\n  # [[[ha]]]\n  # Resource Manager logical name (required for HA)\n  ## logical_name=my-rm-name\n\n  # Un-comment to enable\n  ## submit_to=True\n\n  # URL of the ResourceManager API\n  ## resourcemanager_api_url=http://localhost:8088\n\n  # ...\n\n\n###########################################################################\n# Settings to configure Beeswax with Hive\n###########################################################################\n\n[beeswax]\n\n# Host where HiveServer2 is running.\n# If Kerberos security is enabled, use fully-qualified domain name (FQDN).\nhive_server_host=hive\n\n\n# Binary thrift port for HiveServer2.\nhive_server_port=10000\n\n# Http thrift port for HiveServer2.\n## hive_server_http_port=10001\n\n# Host where LLAP is running\n## llap_server_host = localhost\n\n# LLAP binary thrift port\n## llap_server_port = 10500\n\n# LLAP HTTP Thrift port\n## llap_server_thrift_port = 10501\n\n# Alternatively, use Service Discovery for LLAP (Hive Server Interactive) and/or Hiveserver2, this will override server and thrift port\n\n# Whether to use Service Discovery for LLAP\n## hive_discovery_llap = true\n\n# is llap (hive server interactive) running in an HA configuration (more than 1)\n# important as the zookeeper structure is different\n## hive_discovery_llap_ha = false\n\n# Shortcuts to finding LLAP znode Key\n# Non-HA - hiveserver-interactive-site - hive.server2.zookeeper.namespace ex hive2 = /hive2\n# HA-NonKerberized - <llap_app_name>_llap ex app name llap0 = /llap0_llap\n# HA-Kerberized - <llap_app_name>_llap-sasl ex app name llap0 = /llap0_llap-sasl\n## hive_discovery_llap_znode = /hiveserver2-hive2\n\n# Whether to use Service Discovery for HiveServer2\n## hive_discovery_hs2 = true\n\n# Hiveserver2 is hive-site hive.server2.zookeeper.namespace ex hiveserver2 = /hiverserver2\n## hive_discovery_hiveserver2_znode = /hiveserver2\n\n# Applicable only for LLAP HA\n# To keep the load on zookeeper to a minimum\n# ---- we cache the LLAP activeEndpoint for the cache_timeout period\n# ---- we cache the hiveserver2 endpoint for the length of session\n# configurations to set the time between zookeeper checks\n## cache_timeout = 60\n\n# Host where Hive Metastore Server (HMS) is running.\n# If Kerberos security is enabled, the fully-qualified domain name (FQDN) is required.\n## hive_metastore_host=localhost\n\n# Configure the port the Hive Metastore Server runs on.\n## hive_metastore_port=9083\n\n# Hive configuration directory, where hive-site.xml is located\n## hive_conf_dir=/etc/hive/conf\n\n# Timeout in seconds for thrift calls to Hive service\n## server_conn_timeout=120\n\n# Timeout in seconds for zookeeper connectivity to get the znode information\n## zookeeper_conn_timeout=30\n\n# Choose whether to use the old GetLog() thrift call from before Hive 0.14 to retrieve the logs.\n# If false, use the FetchResults() thrift call from Hive 1.0 or more instead.\n## use_get_log_api=false\n\n# Limit the number of partitions that can be listed.\n## list_partitions_limit=10000\n\n# The maximum number of partitions that will be included in the SELECT * LIMIT sample query for partitioned tables.\n## query_partitions_limit=10\n\n# A limit to the number of rows that can be downloaded from a query before it is truncated.\n# A value of -1 means there will be no limit.\n## download_row_limit=100000\n\n# A limit to the number of bytes that can be downloaded from a query before it is truncated.\n# A value of -1 means there will be no limit.\n## download_bytes_limit=-1\n\n# Hue will try to close the Hive query when the user leaves the editor page.\n# This will free all the query resources in HiveServer2, but also make its results inaccessible.\n## close_queries=false\n\n# Hue will use at most this many HiveServer2 sessions per user at a time.\n# For Tez, increase the number to more if you need more than one query at the time, e.g. 2 or 3 (Tez has a maximum of 1 query by session).\n# -1 is unlimited number of sessions.\n## max_number_of_sessions=1\n\n# When set to True, Hue will close sessions created for background queries and open new ones as needed.\n# When set to False, Hue will keep sessions created for background queries opened and reuse them as needed.\n# This flag is useful when max_number_of_sessions != 1\n## close_sessions=max_number_of_sessions != 1\n\n# Thrift version to use when communicating with HiveServer2.\n# Version 11 comes with Hive 3.0. If issues, try 7.\n## thrift_version=11\n\n# A comma-separated list of white-listed Hive configuration properties that users are authorized to set.\n## config_whitelist=hive.map.aggr,hive.exec.compress.output,hive.exec.parallel,hive.execution.engine,mapreduce.job.queuename\n\n# Override the default desktop username and password of the hue user used for authentications with other services.\n# e.g. Used for LDAP/PAM pass-through authentication.\n## auth_username=hue\n## auth_password=\n\n# Use SASL framework to establish connection to host.\n## use_sasl=false\n\n# Max number of objects (columns, tables, databases) available to list in the left assist, autocomplete, table browser etc.\n# Setting this higher than the default can degrade performance.\n## max_catalog_sql_entries=5000\n\n[[ssl]]\n# Path to Certificate Authority certificates.\n## cacerts=/etc/hue/cacerts.pem\n\n# Choose whether Hue should validate certificates received from the server.\n## validate=true\n\n\n###########################################################################\n# Settings to configure Metastore\n###########################################################################\n\n[metastore]\n# Flag to turn on the new version of the create table wizard.\n## enable_new_create_table=true\n\n# Flag to force all metadata calls (e.g. list tables, table or column details...) to happen via HiveServer2 if available instead of Impala.\n## force_hs2_metadata=false\n\n# Choose whether to show the table ERD component. Default false\n## show_table_erd=false\n\n###########################################################################\n# Settings to configure Impala\n###########################################################################\n\n[impala]\n# Host of the Impala Server (one of the Impalad)\n## server_host=localhost\n\n# Port of the Impala Server\n## server_port=21050\n\n# Endpoint of the Impala Proxy Server, for example: '/endpoint'.\n# Note that SERVER_PORT will be used when set.\n## proxy_endpoint=\n\n# URL of the Impala Coordinator Server.\n## coordinator_url=localhost:25000\n\n# Kerberos principal\n## impala_principal=impala/hostname.foo.com\n\n# Turn on/off impersonation mechanism when talking to Impala\n## impersonation_enabled=False\n\n# Impala Coordinator Web Server has Spnego enabled\n## coordinator_ui_spnego=false\n\n# Number of initial rows of a result set to ask Impala to cache in order\n# to support re-fetching them for downloading them.\n# Set to 0 for disabling the option and backward compatibility.\n## querycache_rows=50000\n\n# Timeout in seconds for thrift calls\n## server_conn_timeout=120\n\n# Hue will try to close the Impala query when the user leaves the editor page.\n# This will free all the query resources in Impala, but also make its results inaccessible.\n## close_queries=true\n\n# If > 0, the query will be timed out (i.e. cancelled) if Impala does not do any work\n# (compute or send back results) for that query within QUERY_TIMEOUT_S seconds.\n## query_timeout_s=300\n\n# If > 0, the session will be timed out (i.e. cancelled) if Impala does not do any work\n# (compute or send back results) for that session within SESSION_TIMEOUT_S seconds (default 15 min).\n## session_timeout_s=900\n\n# Override the desktop default username and password of the hue user used for authentications with other services.\n# e.g. Used for LDAP/PAM pass-through authentication.\n## auth_username=hue\n## auth_password=\n\n# Username and password for Impala Daemon Web interface for getting Impala queries in JobBrowser\n## daemon_api_username=\n## daemon_api_password=\n# Execute this script to produce the password to avoid entering in clear text\n## daemon_api_password_script=\n# Set to 'digest' when webserver_htpassword_user and webserver_htpassword_password are set for Impala, or set to\n# 'basic' if webserver_require_ldap is set\n## daemon_api_auth_scheme=digest\n\n# A comma-separated list of white-listed Impala configuration properties that users are authorized to set.\n# config_whitelist=debug_action,explain_level,mem_limit,optimize_partition_key_scans,query_timeout_s,request_pool\n\n# Path to the impala configuration dir which has impalad_flags file\n## impala_conf_dir=${HUE_CONF_DIR}/impala-conf\n\n# Use SASL framework to establish connection to host.\n## use_sasl=true\n\n# Use Thrift over HTTP for the transport mode.\n## use_thrift_http=false\n\n# Due to IMPALA-10272, the importer fails with READ permissions.\n# Setting this to True, means setting the scratch directory and its file to 777 so the importer does not fail with permission issue\n## user_scratch_dir_permission=false\n\n[[ssl]]\n# SSL communication enabled for this server.\n## enabled=false\n\n# Path to Certificate Authority certificates.\n## cacerts=/etc/hue/cacerts.pem\n\n# Choose whether Hue should validate certificates received from the server.\n## validate=true\n\n\n###########################################################################\n# Settings to configure the Spark application.\n###########################################################################\n\n[spark]\n# The Livy Server URL.\n## livy_server_url=http://localhost:8998\n\n# Whether Livy requires client to perform Kerberos authentication.\n## security_enabled=false\n\n# Whether Livy requires client to use csrf protection.\n## csrf_enabled=false\n\n# Host of the Spark Thrift Server\n# https://spark.apache.org/docs/latest/sql-distributed-sql-engine.html\n## sql_server_host=localhost\n\n# Port of the Spark Thrift Server\n## sql_server_port=10000\n\n# Choose whether Hue should validate certificates received from the server.\n## ssl_cert_ca_verify=true\n\n# Use SASL framework to establish connection to host.\n## use_sasl=false\n\n###########################################################################\n# Settings to configure the Oozie app\n###########################################################################\n\n[oozie]\n# Location on local FS where the examples are stored.\n## local_data_dir=..../examples\n\n# Location on local FS where the data for the examples is stored.\n## sample_data_dir=...thirdparty/sample_data\n\n# Location on HDFS where the oozie examples and workflows are stored.\n# Parameters are $TIME and $USER, e.g. /user/$USER/hue/workspaces/workflow-$TIME\n## remote_data_dir=/user/hue/oozie/workspaces\n\n# JDBC URL for Hive2 action\n## oozie_hs2_jdbc_url=jdbc:hive2://localhost:10000/default\n\n# Maximum of Oozie workflows or coodinators to retrieve in one API call.\n## oozie_jobs_count=100\n\n# Use Cron format for defining the frequency of a Coordinator instead of the old frequency number/unit.\n## enable_cron_scheduling=true\n\n# Flag to enable the saved Editor queries to be dragged and dropped into a workflow.\n## enable_document_action=true\n\n# Flag to enable Oozie backend filtering instead of doing it at the page level in Javascript. Requires Oozie 4.3+.\n## enable_oozie_backend_filtering=true\n\n# Flag to enable the Impala action.\n## enable_impala_action=false\n\n# Flag to enable the Altus action.\n## enable_altus_action=false\n\n\n###########################################################################\n# Settings to configure the Filebrowser app\n###########################################################################\n\n[filebrowser]\n# Location on local filesystem where the uploaded archives are temporary stored.\n## archive_upload_tempdir=/tmp\n\n# Show Download Button for HDFS file browser.\n## show_download_button=true\n\n# Show Upload Button for HDFS file browser.\n## show_upload_button=true\n\n# Flag to enable the extraction of a uploaded archive in HDFS.\n## enable_extract_uploaded_archive=true\n\n# Redirect client to WebHdfs or S3 for file download. Note: Turning this on will override notebook/redirect_whitelist for user selected file downloads on WebHdfs & S3.\n## redirect_download=false\n\n# DEPRECATED in favor of default_home_path per FS config level.\n# Optionally set this if you want a different home directory path. e.g. s3a://gethue.\n## remote_storage_home=s3a://gethue\n\n# Optionally set this to control the caching strategy for files download\n## file_download_cache_control=no-store, no-cache, max-age=0, must-revalidate, proxy-revalidate\n\n# A limit on a file size (bytes) that can be uploaded to a filesystem.\n# A value of -1 means there will be no limit.\n## max_file_size_upload_limit=-1\n\n# Specify file extensions that are not allowed, separated by commas.\n## restrict_file_extensions=.exe, .zip, .rar, .tar, .gz\n\n###########################################################################\n# Settings to configure Pig\n###########################################################################\n\n[pig]\n# Path to directory with piggybank.jar on local filesystem.\n## local_sample_dir=/usr/share/hue/apps/pig/examples\n\n# Location piggybank.jar will be copied to in HDFS.\n## remote_data_dir=/user/hue/pig/examples\n\n\n###########################################################################\n# Settings to configure Sqoop2\n###########################################################################\n\n[sqoop]\n# If the Sqoop2 app is enabled. Sqoop2 project is deprecated. Sqoop1 is recommended.\n## is_enabled=false\n\n# Sqoop server URL\n## server_url=http://localhost:12000/sqoop\n\n# Path to configuration directory\n## sqoop_conf_dir=/etc/sqoop2/conf\n\n# Choose whether Hue should validate certificates received from the server.\n## ssl_cert_ca_verify=true\n\n# For autocompletion, fill out the librdbms section.\n\n###########################################################################\n# Settings to configure Proxy\n###########################################################################\n\n[proxy]\n# Comma-separated list of regular expressions,\n# which match 'host:port' of requested proxy target.\n## whitelist=(localhost|127\\.0\\.0\\.1):(50030|50070|50060|50075)\n\n# Comma-separated list of regular expressions,\n# which match any prefix of 'host:port/path' of requested proxy target.\n# This does not support matching GET parameters.\n## blacklist=\n\n\n###########################################################################\n# Settings to configure HBase Browser\n###########################################################################\n\n[hbase]\n# Comma-separated list of HBase Thrift servers for clusters in the format of '(name|host:port)'.\n# Use full hostname. If hbase.thrift.ssl.enabled in hbase-site is set to true, https will be used otherwise it will use http\n# If using Kerberos we assume GSSAPI SASL, not PLAIN.\n## hbase_clusters=(Cluster|localhost:9090)\n\n# HBase configuration directory, where hbase-site.xml is located.\n## hbase_conf_dir=/etc/hbase/conf\n\n# Hard limit of rows or columns per row fetched before truncating.\n## truncate_limit = 500\n\n# Should come from hbase-site.xml, do not set. 'framed' is used to chunk up responses, used with the nonblocking server in Thrift but is not supported in Hue.\n# 'buffered' used to be the default of the HBase Thrift Server. Default is buffered when not set in hbase-site.xml.\n## thrift_transport=buffered\n\n# Choose whether Hue should validate certificates received from the server.\n## ssl_cert_ca_verify=true\n\n\n###########################################################################\n# Settings to configure Solr Search\n###########################################################################\n\n[search]\n\n# URL of the Solr Server\n## solr_url=http://localhost:8983/solr/\n\n# Requires FQDN in solr_url if enabled\n## security_enabled=false\n\n## Query sent when no term is entered\n## empty_query=*:*\n\n## Download limit with max of 15k\n## download_limit=1000\n\n###########################################################################\n# Settings to configure Solr API lib\n###########################################################################\n\n[libsolr]\n\n# Choose whether Hue should validate certificates received from the server.\n## ssl_cert_ca_verify=true\n\n# Default path to Solr in ZooKeeper.\n## solr_zk_path=/solr\n\n\n###########################################################################\n# Settings to configure the Data Import Wizard\n###########################################################################\n\n[indexer]\n\n# Filesystem directory containing Solr Morphline indexing libs.\n## config_indexer_libs_path=/tmp/smart_indexer_lib\n\n# Filesystem directory containing JDBC libs.\n## config_jdbc_libs_path=/user/oozie/libext/jdbc_drivers\n\n# Filesystem directory containing jar libs.\n## config_jars_libs_path=/user/oozie/libext/libs\n\n# Flag to turn on the Solr Morphline indexer.\n## enable_scalable_indexer=true\n\n# Flag to turn on Sqoop ingest.\n## enable_sqoop=true\n\n# Flag to turn on Kafka topic ingest.\n## enable_kafka=false\n\n# Flag to turn on the direct upload of a small file.\n## enable_direct_upload=true\n\n\n###########################################################################\n# Settings to configure Job Designer\n###########################################################################\n\n[jobsub]\n\n# Location on local FS where examples and template are stored.\n## local_data_dir=..../data\n\n# Location on local FS where sample data is stored\n## sample_data_dir=...thirdparty/sample_data\n\n\n###########################################################################\n# Settings to configure Job Browser.\n###########################################################################\n\n[jobbrowser]\n# Share submitted jobs information with all users. If set to false,\n# submitted jobs are visible only to the owner and administrators.\n## share_jobs=true\n\n# Whether to disalbe the job kill button for all users in the jobbrowser\n## disable_killing_jobs=false\n\n# Offset in bytes where a negative offset will fetch the last N bytes for the given log file (default 1MB).\n## log_offset=-1000000\n\n# Maximum number of jobs to fetch and display when pagination is not supported for the type.\n## max_job_fetch=500\n\n# Show the version 2 of app which unifies all the past browsers into one.\n## enable_v2=true\n\n# Show the Impala query section for listing and showing more troubleshooting information.\n## enable_query_browser=true\n\n# Show the Hive section for listing the query history and providing more troubleshooting information.\n## enable_hive_query_browser=false\n\n# Use the proxy API instead of the ORM to access the query_store.\n## use_proxy=true\n\n[[query_store]]\n# URL of Query Store API server.\n##server_url=\n\n# Show the Hive/Impala queries UI. The value is automatically set to false if server_url is empty, else true.\n##is_enabled=false\n\n###########################################################################\n# Settings to configure Sentry / Security App.\n###########################################################################\n\n[security]\n\n# Use Sentry API V1 for Hive.\n## hive_v1=true\n\n# Use Sentry API V2 for Hive.\n## hive_v2=false\n\n# Use Sentry API V2 for Solr.\n## solr_v2=true\n\n\n###########################################################################\n# Settings to configure the Zookeeper application.\n###########################################################################\n\n[zookeeper]\n\n[[clusters]]\n\n[[[default]]]\n# Zookeeper ensemble. Comma separated list of Host/Port.\n# e.g. localhost:2181,localhost:2182,localhost:2183\n## host_ports=localhost:2181\n\n# The URL of the REST contrib service (required for znode browsing).\n## rest_url=http://localhost:9998\n\n# Name of Kerberos principal when using security.\n## principal_name=zookeeper\n\n\n###########################################################################\n# Settings for the User Admin application\n###########################################################################\n\n[useradmin]\n# Default home directory permissions\n## home_dir_permissions=0755\n\n# Disable to use umask from hdfs else new user home directory would be created with the permissions from home_dir_permissions\n## use_home_dir_permissions=true\n\n# The name of the default user group that users will be a member of\n## default_user_group=default\n\n[[password_policy]]\n# Set password policy to all users. The default policy requires password to be at least 8 characters long,\n# and contain both uppercase and lowercase letters, numbers, and special characters.\n\n## is_enabled=false\n## pwd_regex=\"^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W_]){1,}).{8,}$\"\n## pwd_hint=\"The password must be at least 8 characters long, and must contain both uppercase and lowercase letters, at least one number, and at least one special character.\"\n## pwd_error_message=\"The password must be at least 8 characters long, and must contain both uppercase and lowercase letters, at least one number, and at least one special character.\"\n\n\n###########################################################################\n# Settings to configure liboozie\n###########################################################################\n\n[liboozie]\n# The URL where the Oozie service runs on. This is required in order for\n# users to submit jobs. Empty value disables the config check.\n## oozie_url=http://localhost:11000/oozie\n\n# Requires FQDN in oozie_url if enabled\n## security_enabled=false\n\n# Location on HDFS where the workflows/coordinator are deployed when submitted.\n## remote_deployement_dir=/user/hue/oozie/deployments\n\n\n###########################################################################\n# Settings for the AWS lib\n###########################################################################\n\n[aws]\n# Enable the detection of an IAM role providing the credentials automatically. It can take a few seconds.\n## has_iam_detection=false\n\n[[aws_accounts]]\n# Default AWS account\n## [[[default]]]\n# AWS credentials\n## access_key_id=\n## secret_access_key=\n## security_token=\n\n# Execute this script to produce the AWS access key ID.\n## access_key_id_script=/path/access_key_id.sh\n\n# Execute this script to produce the AWS secret access key.\n## secret_access_key_script=/path/secret_access_key.sh\n\n# Allow to use either environment variables or\n# EC2 InstanceProfile to retrieve AWS credentials.\n## allow_environment_credentials=yes\n\n# AWS region to use, if no region is specified, will attempt to connect to standard s3.amazonaws.com endpoint\n## region=us-east-1\n\n# Endpoint overrides\n## host=\n\n# Proxy address and port\n## proxy_address=\n## proxy_port=8080\n## proxy_user=\n## proxy_pass=\n\n# Secure connections are the default, but this can be explicitly overridden:\n## is_secure=true\n\n# The default calling format uses https://<bucket-name>.s3.amazonaws.com but\n# this may not make sense if DNS is not configured in this way for custom endpoints.\n# e.g. Use boto.s3.connection.OrdinaryCallingFormat for https://s3.amazonaws.com/<bucket-name>\n## calling_format=boto.s3.connection.OrdinaryCallingFormat\n\n# The time in seconds before a delegate key is expired. Used when filebrowser/redirect_download is used. Default to 4 Hours.\n## key_expiry=14400\n\n# Optionally set this for a different home directory path. e.g. s3a://gethue-bucket/user\n## default_home_path=s3a://<bucket_name>/<relative_path>\n\n###########################################################################\n# Settings for the Azure lib\n###########################################################################\n[azure]\n[[azure_accounts]]\n# Default Azure account\n[[[default]]]\n# Azure credentials\n## client_id=\n# Execute this script to produce the ADLS client id.\n## client_id_script=/path/client_id.sh\n## client_secret=\n# Execute this script to produce the ADLS client secret.\n## client_secret_script=/path/client_secret.sh\n## tenant_id=\n# Execute this script to produce the ADLS tenant id.\n## tenant_id_script=/path/tenant_id.sh\n\n[[adls_clusters]]\n# Default ADLS cluster\n[[[default]]]\n## fs_defaultfs=adl://<account_name>.azuredatalakestore.net\n## webhdfs_url=https://<account_name>.azuredatalakestore.net/webhdfs/v1\n\n[[abfs_clusters]]\n# Default ABFS cluster\n[[[default]]]\n## enable_defaultfs_from_coresite=true\n## fs_defaultfs=abfs://<container_name>@<account_name>.dfs.core.windows.net\n## webhdfs_url=https://<account_name>.dfs.core.windows.net\n\n# Optionally set this for a different home directory path. e.g. abfs://gethue-container/user\n## default_home_path=abfs://<container_name>/<relative_path>\n\n###########################################################################\n# Settings for the Sentry lib\n###########################################################################\n\n[libsentry]\n# Hostname or IP of server.\n## hostname=localhost\n\n# Port the sentry service is running on.\n## port=8038\n\n# Sentry configuration directory, where sentry-site.xml is located.\n## sentry_conf_dir=/etc/sentry/conf\n\n# Number of seconds when the privilege list of a user is cached.\n## privilege_checker_caching=300\n\n\n###########################################################################\n# Settings to configure the ZooKeeper Lib\n###########################################################################\n\n[libzookeeper]\n# ZooKeeper ensemble. Comma separated list of Host/Port.\n# e.g. localhost:2181,localhost:2182,localhost:2183\n## ensemble=localhost:2181\n\n# Name of Kerberos principal when using security.\n## principal_name=zookeeper\n\n\n###########################################################################\n# Settings for the RDBMS application\n###########################################################################\n\n[librdbms]\n# The RDBMS app can have any number of databases configured in the databases\n# section. A database is known by its section name\n# (IE sqlite, mysql, psql, and oracle in the list below).\n\n[[databases]]\n# sqlite configuration.\n## [[[sqlite]]]\n# Name to show in the UI.\n## nice_name=SQLite\n\n# For SQLite, name defines the path to the database.\n## name=/tmp/sqlite.db\n\n# Database backend to use.\n## engine=sqlite\n\n# Database options to send to the server when connecting.\n# https://docs.djangoproject.com/en/1.4/ref/databases/\n## options={}\n\n# mysql, oracle, or postgresql configuration.\n## [[[mysql]]]\n# Name to show in the UI.\n## nice_name=\"My SQL DB\"\n\n# For MySQL and PostgreSQL, name is the name of the database.\n# For Oracle, Name is instance of the Oracle server. For express edition\n# this is 'xe' by default.\n## name=mysqldb\n\n# Database backend to use. This can be:\n# 1. mysql\n# 2. postgresql\n# 3. oracle\n## engine=mysql\n\n# IP or hostname of the database to connect to.\n## host=localhost\n\n# Port the database server is listening to. Defaults are:\n# 1. MySQL: 3306\n# 2. PostgreSQL: 5432\n# 3. Oracle Express Edition: 1521\n## port=3306\n\n# Username to authenticate with when connecting to the database.\n## user=example\n\n# Password matching the username to authenticate with when\n# connecting to the database.\n## password=example\n\n# Database options to send to the server when connecting.\n# https://docs.djangoproject.com/en/1.4/ref/databases/\n## options={}\n\n\n###########################################################################\n# Settings to configure SAML\n###########################################################################\n\n[libsaml]\n# Xmlsec1 binary path. This program should be executable by the user running Hue.\n## xmlsec_binary=/usr/local/bin/xmlsec1\n\n# Entity ID for Hue acting as service provider.\n# Can also accept a pattern where '<base_url>' will be replaced with server URL base.\n## entity_id=\"<base_url>/saml2/metadata/\"\n\n# Create users from SSO on login.\n## create_users_on_login=true\n\n# Required attributes to ask for from IdP.\n# This requires a comma separated list.\n## required_attributes=uid\n\n# Optional attributes to ask for from IdP.\n# This requires a comma separated list.\n## optional_attributes=\n\n# IdP metadata in the form of a file. This is generally an XML file containing metadata that the Identity Provider generates.\n## metadata_file=\n\n# Private key to encrypt metadata with.\n## key_file=\n\n# Signed certificate to send along with encrypted metadata.\n## cert_file=\n\n# If your computer and another computer that you are communicating with are not in synch regarding the computer clock, then here you can state how big a difference you are prepared to accept in milliseconds.\n## accepted_time_diff=0\n\n# Path to a file containing the password private key.\n## key_file_password=/path/key\n\n# Execute this script to produce the private key password. This will be used when 'key_file_password' is not set.\n## key_file_password_script=/path/pwd.sh\n\n# A mapping from attributes in the response from the IdP to django user attributes.\n## user_attribute_mapping={'uid': ('username', )}\n\n# Have Hue initiated authn requests be signed and provide a certificate.\n## authn_requests_signed=false\n\n# Have Hue initiated authn response be signed.\n## want_response_signed=false\n\n# Have Hue initiated authn assertions response be signed.\n## want_assertions_signed=false\n\n# Have Hue initiated logout requests be signed and provide a certificate.\n## logout_requests_signed=false\n\n# Username can be sourced from 'attributes' or 'nameid'.\n## username_source=attributes\n\n# Performs the logout or not.\n## logout_enabled=true\n\n# Comma separated list of group names which are all required to complete the authentication. e.g. admin,sales.\n## required_groups=\n\n# Name of the SAML attribute containing the list of groups the user belongs to.\n## required_groups_attribute=groups\n\n\n###########################################################################\n# Settings to configure OAuth\n###########################################################################\n\n[liboauth]\n# NOTE:\n# To work, each of the active (i.e. uncommented) service must have\n# applications created on the social network.\n# Then the \"consumer key\" and \"consumer secret\" must be provided here.\n#\n# The addresses where to do so are:\n# Twitter:  https://dev.twitter.com/apps\n# Google+ : https://cloud.google.com/\n# Facebook: https://developers.facebook.com/apps\n# Linkedin: https://www.linkedin.com/secure/developer\n#\n# Additionnaly, the following must be set in the application settings:\n# Twitter:  Callback URL (aka Redirect URL) must be set to http://YOUR_HUE_IP_OR_DOMAIN_NAME/oauth/social_login/oauth_authenticated\n# Google+ : CONSENT SCREEN must have email address\n# Facebook: Sandbox Mode must be DISABLED\n# Linkedin: \"In OAuth User Agreement\", r_emailaddress is REQUIRED\n\n# The Consumer key of the application\n## consumer_key_twitter=\n## consumer_key_google=\n## consumer_key_facebook=\n## consumer_key_linkedin=\n\n# The Consumer secret of the application\n## consumer_secret_twitter=\n## consumer_secret_google=\n## consumer_secret_facebook=\n## consumer_secret_linkedin=\n\n# The Request token URL\n## request_token_url_twitter=https://api.twitter.com/oauth/request_token\n## request_token_url_google=https://accounts.google.com/o/oauth2/auth\n## request_token_url_linkedin=https://www.linkedin.com/uas/oauth2/authorization\n## request_token_url_facebook=https://graph.facebook.com/oauth/authorize\n\n# The Access token URL\n## access_token_url_twitter=https://api.twitter.com/oauth/access_token\n## access_token_url_google=https://accounts.google.com/o/oauth2/token\n## access_token_url_facebook=https://graph.facebook.com/oauth/access_token\n## access_token_url_linkedin=https://api.linkedin.com/uas/oauth2/accessToken\n\n# The Authenticate URL\n## authenticate_url_twitter=https://api.twitter.com/oauth/authorize\n## authenticate_url_google=https://www.googleapis.com/oauth2/v1/userinfo?access_token=\n## authenticate_url_facebook=https://graph.facebook.com/me?access_token=\n## authenticate_url_linkedin=https://api.linkedin.com/v1/people/~:(email-address)?format=json&oauth2_access_token=\n\n# Username Map. Json Hash format.\n# Replaces username parts in order to simplify usernames obtained\n# Example: {\"@sub1.domain.com\":\"_S1\", \"@sub2.domain.com\":\"_S2\"}\n# converts 'email@sub1.domain.com' to 'email_S1'\n## username_map={}\n\n# Whitelisted domains (only applies to Google OAuth). CSV format.\n## whitelisted_domains_google=\n\n\n###########################################################################\n# Settings to configure Kafka\n###########################################################################\n\n[kafka]\n\n[[kafka]]\n# Enable the Kafka integration.\n## is_enabled=false\n\n# URL of Kafka REST API.\n## api_url=http://localhost:8082\n\n# URL of Kafka Ksql API.\n## ksql_api_url=http://localhost:8088\n\n# URL of Schema Registry API.\n## schema_registry_api_url=http://localhost:8081\n\n\n###########################################################################\n# Settings to configure Metadata\n###########################################################################\n\n[metadata]\n\n[[manager]]\n# Cloudera Manager API URL (without version suffix).\n## api_url=http://localhost:7180/api\n\n[[optimizer]]\n# Mode of optimization: off, local, api.\n## mode=off\n\n# Type of Optimizer connector to use, e.g. optimizer, navopt, dummy.\n## interface=navopt\n\n# Hostname of Optimizer API service.\n## hostname=navoptapi.us-west-1.optimizer.altus.cloudera.com\n\n# The name of the key of the service.\n## auth_key_id=e0819f3a-1e6f-4904-be69-5b704bacd1245\n\n# The private part of the key associated with the auth_key.\n## auth_key_secret='-----BEGIN PRIVATE KEY....'\n\n# Execute this script to produce the auth_key secret. This will be used when `auth_key_secret` is not set.\n## auth_key_secret_script=/path/to/script.sh\n\n# The name of the workload where queries are uploaded and optimizations are calculated from. Automatically guessed from auth_key and cluster_id if not specified.\n## tenant_id=\n\n# Perform Sentry privilege filtering.\n# Default to true automatically if the cluster is secure.\n## apply_sentry_permissions=False\n\n# Cache timeout in milliseconds for the Optimizer metadata used in assist, autocomplete, etc.\n# Defaults to 10 days, set to 0 to disable caching.\n## cacheable_ttl=864000000\n\n# Automatically upload queries after their execution in order to improve recommendations.\n## auto_upload_queries=true\n\n# Automatically upload queried tables DDL in order to improve recommendations.\n## auto_upload_ddl=true\n\n# Automatically upload queried tables and columns stats in order to improve recommendations.\n## auto_upload_stats=false\n\n# Allow admins to upload the last N executed queries in the quick start wizard. Use 0 to disable.\n## query_history_upload_limit=10000\n\n[[catalog]]\n# The type of Catalog: Apache Atlas, Cloudera Navigator...\n## interface=atlas\n# Catalog API URL (without version suffix).\n## api_url=http://localhost:21000/atlas/v2\n\n# Username of the CM user used for authentication.\n## server_user=hue\n# Password of the user used for authentication.\n## server_password=\n\n# Limits found entities to a specific cluster. When empty the entities from all clusters will be included in the\n# search results.\n## search_cluster=\n\n# Set to true when authenticating via kerberos instead of username/password\n## kerberos_enabled=core_site.is_kerberos_enabled()\n\n# Directory of the configurations.\n## conf_dir=HUE_CONF_DIR/hive-conf\n\n# Deprecated by [[catalog]]\n[[navigator]]\n# Navigator API URL (without version suffix).\n## api_url=http://localhost:7187/api\n\n# Which authentication to use: CM or external via LDAP or SAML.\n## navmetadataserver_auth_type=CMDB\n\n# Username of the CM user used for authentication.\n## navmetadataserver_cmdb_user=hue\n# CM password of the user used for authentication.\n## navmetadataserver_cmdb_password=\n# Execute this script to produce the CM password. This will be used when the plain password is not set.\n# navmetadataserver_cmdb_password_script=\n\n# Username of the LDAP user used for authentication.\n## navmetadataserver_ldap_user=hue\n# LDAP password of the user used for authentication.\n## navmetadataserver_ldap_ppassword=\n# Execute this script to produce the LDAP password. This will be used when the plain password is not set.\n## navmetadataserver_ldap_password_script=\n\n# Username of the SAML user used for authentication.\n## navmetadataserver_saml_user=hue\n## SAML password of the user used for authentication.\n# navmetadataserver_saml_password=\n# Execute this script to produce the SAML password. This will be used when the plain password  is not set.\n## navmetadataserver_saml_password_script=\n\n# Perform Sentry privilege filtering.\n# Default to true automatically if the cluster is secure.\n## apply_sentry_permissions=False\n\n# Max number of items to fetch in one call in object search.\n## fetch_size_search=450\n\n# Max number of items to fetch in one call in object search autocomplete.\n## fetch_size_search_interactive=450\n\n# If metadata search is enabled, also show the search box in the left assist.\n## enable_file_search=false\n\n[[prometheus]]\n# Configuration options for Prometheus API.\n## api_url=http://localhost:9090/api\n"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: hue
  name: hue-cm1
