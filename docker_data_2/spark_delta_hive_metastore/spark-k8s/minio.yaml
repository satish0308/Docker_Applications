apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/data/minio  # hostPath for minikube/local dev
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        args:
          - server
          - /data
        env:
          - name: MINIO_ROOT_USER
            value: "minioadmin"
          - name: MINIO_ROOT_PASSWORD
            value: "minioadmin123"
        ports:
          - containerPort: 9000
          - containerPort: 9090
        volumeMounts:
          - name: minio-storage
            mountPath: /data
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  selector:
    app: minio
  type: NodePort
  ports:
    - name: api
      port: 9000
      targetPort: 9000
      nodePort: 30090
    - name: console
      port: 9090
      targetPort: 9090
      nodePort: 30091
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-minio-bucket
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mc
        image: minio/mc
        command: ["/bin/sh", "-c"]
        args:
          - |
            mc alias set local http://minio:9000 minioadmin minioadmin123 && \
            mc mb local/spark-data || true
